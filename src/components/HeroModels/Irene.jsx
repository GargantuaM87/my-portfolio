/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Irene.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Irene(props) {
  const { scene } = useGLTF('models/Irene.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group position={[1.009, 1.039, 0]} scale={0.473}>
        <primitive object={nodes.eyes_select} />
      </group>
      <group position={[1.495, 1.039, 0]} scale={0.473}>
        <primitive object={nodes.mouth_select} />
      </group>
      <group position={[0, -2.101, 0]} scale={1.891}>
        <primitive object={nodes.spine001} />
        <skinnedMesh geometry={nodes.BezierCurve.geometry} material={materials.mainTex} skeleton={nodes.BezierCurve.skeleton} />
        <skinnedMesh geometry={nodes.Circle.geometry} material={materials.mainTex} skeleton={nodes.Circle.skeleton} />
        <skinnedMesh geometry={nodes.Circle001.geometry} material={materials.mainTex} skeleton={nodes.Circle001.skeleton} />
        <skinnedMesh geometry={nodes.Cube001.geometry} material={materials.mainTex} skeleton={nodes.Cube001.skeleton} />
        <skinnedMesh geometry={nodes.Cylinder.geometry} material={materials.mainTex} skeleton={nodes.Cylinder.skeleton} />
        <skinnedMesh geometry={nodes.Cube001_1.geometry} material={materials.mainTex} skeleton={nodes.Cube001_1.skeleton} />
        <skinnedMesh geometry={nodes.Cube001_2.geometry} material={materials.eyes_tex} skeleton={nodes.Cube001_2.skeleton} />
        <skinnedMesh geometry={nodes.Cube001_3.geometry} material={materials.mouth_tex} skeleton={nodes.Cube001_3.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('models/Irene.glb')
